#include<FEHLCD.h>
#include<FEHIO.h>
#include<FEHUtility.h>
#include<FEHMotor.h>
#include<FEHServo.h>
#include<FEHUtility.h>

FEHMotor leftMotor (FEHMotor:: Motor0,12.0);
FEHMotor rightMotor (FEHMotor:: Motor1,12.0);

FEHServo topServo (FEHServo:: Servo0);
FEHServo bottomServo (FEHServo:: Servo1);

AnalogInputPin sensor(FEHIO::P1_0);
DigitalInputPin leftBumper(FEHIO:: P2_0);
DigitalInputPin rightBumper(FEHIO:: P3_0);


#define FULL_POWER 100
#define LEFT 1
#define RIGHT 2
#define WHEEL_DIST ??       //For use w/ constant curve turns
#define WHEEL_TO_FRONT ??   // For use w/ stationary turns

#define CLICKED 0



/**
 * For use with an exact needed distance.
 * I.e., move the robot forward 9 inches.
 */
void DriveDistance(int distance, int power){
    LCD.WriteLine("Driving Forward");
    leftMotor.SetPercent(power);
    rightMotor.SetPercent(power);
    
    //Somehow track distance
    
    LCD.WriteLine("Stopping");
}

/**
  * Moves the robot forward until two of it's sensors are clicked by the wall
  */
void DriveToWall(int power){
    LCD.WriteLine("Driving to wall")
    leftMotor.SetPercent(power);
    rightMotor.SetPercent(power);
    while(leftBumper !=CLICKED && rightBumper != CLICKED);
    leftMotor.SetPercent(0);
    rightMotor.SetPercent(0);
    LCD.WriteLine("Contact Made With Both Sensors");
}

/**
  *
  */
void StationaryTurn(int angle, int direction){
  char[6] dir = "Right\0";
  if(direction == LEFT)
      dir = "Left \0"
  LCD.WriteLine("Turning " + angle + " degrees to the " + dir);
  int rightPower = 50;    int leftPower = -50;
  if(direction == RIGHT){
      rightPower *=-1;  leftPower *=-1;
  }
  rightMotor.SetPercent(rightPower);
  leftMotor.SetPercent(leftPower);
  int time = TimeNow();
  while(TimeNow()-time > GetTurnTime(angle));
  rightMotor.SetPercent(0);
  leftMotor.SetPercent(0);
  
}


// Returns the time it should take the robot to turn to the specified angle
// We need to spin the robot around for ~10 revs and see how long it takes
int GetTurnTime(int angle){

}


//The functions below are all for completing tasks in a sequential order


void WaitForStart(){
    while(sensor.Value() isNotGreen);   //Clearly this needs to change
}

void MovePastSatellite(){

}

void TurnSatellite(){

}









